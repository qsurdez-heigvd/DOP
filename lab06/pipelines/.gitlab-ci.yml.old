# Main (parent) pipeline
stages:
  - build
  - test
  - build-docker
  - deploy
  - static-analysis

# Security scanning templates
include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

# Maven cache reloaded on pom.xml
.maven-cache: &maven-cache
  image: maven:3-eclipse-temurin-17
  cache:
    key:
      files:
        - pom.xml
    paths:
      - .m2/repository
    policy: pull-push

# Template for using maven
.maven-config: &maven-config
  needs: [build-spring]
  <<: *maven-cache

# Docker configuration template
.docker-config: &docker-config
  image: docker:20.10
  needs: [ unit-test-spring, integration-test-spring ]
  services:
    - docker:20.10-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin

# Different rules for different stages
.rules-default-branch: &rules-default-branch
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.rules-mr-and-default: &rules-mr-and-default
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Creating the package skipping the tests
build-spring:
  stage: build
  <<: *maven-cache
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/testing-web-complete-0.0.1-SNAPSHOT.jar

# Code quality configuration
code_quality:
  stage: static-analysis
  <<: *maven-config
  script:
    - mvn spotbugs:check pmd:check checkstyle:check
  allow_failure: true
  artifacts:
    paths:
      - target/site/spotbugs.html
      - target/reports/pmd.html
      - target/checkstyle-result.xml

# Unit test skipping integration tests
unit-test-spring:
  stage: test
  <<: *maven-config
  script:
    - mvn test -DskipITs
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml
      coverage_report:
        coverage_format: jacoco
        path: target/site/jacoco/jacoco.xml
  coverage: '/Total.*?([0-9]{1,3})%/'

# Integration tests skipping unit tests
integration-test-spring:
  stage: test
  <<: *maven-config
  needs: [unit-test-spring]
  script:
    - mvn verify -DskipUnitTests

# Build docker
build-spring-docker:
  stage: build-docker
  <<: *docker-config
  script:
    - docker pull $IMAGE_LATEST || true
    - docker build --cache-from $IMAGE_LATEST -t $IMAGE_TAG -t $IMAGE_LATEST .
    - docker save $IMAGE_TAG -o built-image.tar
  artifacts:
    paths:
      - built-image.tar

# Deploy docker
publish-spring-docker:
  stage: deploy
  <<: *docker-config
  needs: [build-spring-docker]
  script:
    - docker load -i built-image.tar
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $IMAGE_TAG
    - docker push $IMAGE_LATEST

# Container scanning configuration
container_scanning:
  stage: static-analysis
  needs: [publish-spring-docker]
  parallel:
    matrix:
      - CS_IMAGE: ["${CI_REGISTRY_IMAGE:$CI_COMMIT_SHA}"]