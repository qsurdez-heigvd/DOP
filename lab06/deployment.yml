---
# Common namespace for related resources
apiVersion: v1
kind: Namespace
metadata:
  name: spring-app
  labels:
    name: spring-app
    environment: development
---
# Ingress configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-app-ingress
  namespace: spring-app
  labels:
    app: spring-app
    component: spring-api
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-app-service
                port:
                  number: 8080
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app-deployment
  namespace: spring-app
  labels:
    app: spring-app
    tier: backend
spec:
  selector:
    matchLabels:
      app: spring-app
  # Define update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: spring-app
          # The latest tag is used for easier dev experience. In prod
          # use the commit SHA to know which image you're using.
          image: registry.gitlab.com/sinaf19/heig-vd-devops-java:latest
          imagePullPolicy: IfNotPresent
          # Resource requests and limits
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 8080
              name: http
---
# Service definition
apiVersion: v1
kind: Service
metadata:
  name: spring-app-service
  namespace: spring-app
  labels:
    app: spring-app
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: spring-app
---
# Horizontal Pod Autoscaler for scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: spring-app-hpa
  namespace: spring-app
  labels:
    app: spring-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: spring-app-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80